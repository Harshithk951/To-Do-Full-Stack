{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\n//\n// FILE: src/components/ResetPassword.js (THE FINAL, CORRECTED VERSION)\n//\nimport React, { useState } from 'react'; // <-- THIS IS THE CORRECTED IMPORT LINE\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { Box, TextField, Button, Typography, Paper, Link as MuiLink } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to reset password');\n      setMessage(data.message + \" Redirecting to login...\");\n      setTimeout(() => navigate('/login'), 2500);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-start',\n      paddingTop: '15vh',\n      backgroundColor: '#f9fafb',\n      boxSizing: 'border-box'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"div\",\n      elevation: 3,\n      sx: {\n        p: 4,\n        borderRadius: 3,\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'text.secondary',\n            mt: 1\n          },\n          children: \"Please enter a new strong password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            fontWeight: 600,\n            mb: 1\n          },\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          fullWidth: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          fullWidth: true,\n          children: \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"8bviyvBGYve0Jb44Ns7+pxZSLfA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Link","Box","TextField","Button","Typography","Paper","MuiLink","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","message","setMessage","error","setError","token","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","setTimeout","err","sx","minHeight","display","justifyContent","alignItems","paddingTop","backgroundColor","boxSizing","children","component","elevation","p","borderRadius","maxWidth","width","textAlign","mb","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","mt","onSubmit","type","value","onChange","target","required","fullWidth","size","className","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/ResetPassword.js"],"sourcesContent":["//\n// FILE: src/components/ResetPassword.js (THE FINAL, CORRECTED VERSION)\n//\nimport React, { useState } from 'react'; // <-- THIS IS THE CORRECTED IMPORT LINE\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { Box, TextField, Button, Typography, Paper, Link as MuiLink } from '@mui/material';\n\nfunction ResetPassword() {\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    try {\n      const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ password }),\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to reset password');\n      setMessage(data.message + \" Redirecting to login...\");\n      setTimeout(() => navigate('/login'), 2500);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        paddingTop: '15vh',\n        backgroundColor: '#f9fafb',\n        boxSizing: 'border-box'\n      }}\n    >\n      <Paper component=\"div\" elevation={3} sx={{ p: 4, borderRadius: 3, maxWidth: '400px', width: '100%' }}>\n        <Box sx={{ textAlign: 'center', mb: 3 }}>\n          <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 'bold' }}>Reset Your Password</Typography>\n          <Typography sx={{ color: 'text.secondary', mt: 1 }}>Please enter a new strong password.</Typography>\n        </Box>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 600, mb: 1 }}>New Password</Typography>\n          <TextField\n            type=\"password\" variant=\"outlined\" value={password}\n            onChange={(e) => setPassword(e.target.value)} required fullWidth sx={{ mb: 3 }}\n          />\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" fullWidth>\n            Update Password\n          </Button>\n        </Box>\n        {message && <p className=\"message\">{message}</p>}\n        {error && <p className=\"error\">{error}</p>}\n      </Paper>\n    </Box>\n  );\n}\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}