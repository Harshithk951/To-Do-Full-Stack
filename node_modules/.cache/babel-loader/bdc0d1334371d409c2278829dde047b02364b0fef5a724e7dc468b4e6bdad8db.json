{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useMemo, useContext } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { lightTheme } from '../lightTheme';\nimport { darkTheme } from '../darkTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useThemeContext = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useThemeContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AppThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [themeMode, setThemeMode] = useState('light');\n  const theme = useMemo(() => themeMode === 'light' ? lightTheme : darkTheme, [themeMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themeMode,\n      setThemeMode\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s2(AppThemeProvider, \"e1XHoX9nQ7z5CPfxbpAgXBJfokU=\");\n_c = AppThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useMemo","useContext","ThemeProvider","MuiThemeProvider","lightTheme","darkTheme","jsxDEV","_jsxDEV","ThemeContext","useThemeContext","_s","AppThemeProvider","children","_s2","themeMode","setThemeMode","theme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useMemo, useContext } from 'react';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport { lightTheme } from '../lightTheme';\nimport { darkTheme } from '../darkTheme';\n\nconst ThemeContext = createContext();\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport const AppThemeProvider = ({ children }) => {\n    const [themeMode, setThemeMode] = useState('light');\n\n    const theme = useMemo(() => (themeMode === 'light' ? lightTheme : darkTheme), [themeMode]);\n\n    return (\n        <ThemeContext.Provider value={{ themeMode, setThemeMode }}>\n            <MuiThemeProvider theme={theme}>\n                {children}\n            </MuiThemeProvider>\n        </ThemeContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,QAAQ,OAAO;AAC3E,SAASC,aAAa,IAAIC,gBAAgB,QAAQ,sBAAsB;AACxE,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,gBAAGV,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMW,eAAe,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMT,UAAU,CAACO,YAAY,CAAC;AAAA;AAACE,EAAA,CAAjDD,eAAe;AAE5B,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,OAAO,CAAC;EAEnD,MAAMiB,KAAK,GAAGhB,OAAO,CAAC,MAAOc,SAAS,KAAK,OAAO,GAAGV,UAAU,GAAGC,SAAU,EAAE,CAACS,SAAS,CAAC,CAAC;EAE1F,oBACIP,OAAA,CAACC,YAAY,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAEJ,SAAS;MAAEC;IAAa,CAAE;IAAAH,QAAA,eACtDL,OAAA,CAACJ,gBAAgB;MAACa,KAAK,EAAEA,KAAM;MAAAJ,QAAA,EAC1BA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhC,CAAC;AAACT,GAAA,CAZWF,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}