{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/EditMyTaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Box, Typography, TextField, Button } from '@mui/material';\n\n// This is a self-contained modal for editing \"My Tasks\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditMyTaskModal({\n  open,\n  onClose,\n  onUpdateTask,\n  taskToEdit\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    title: '',\n    objective: '',\n    taskDescription: '',\n    deadline: ''\n  });\n  useEffect(() => {\n    if (taskToEdit) {\n      setFormData({\n        title: taskToEdit.title || '',\n        objective: taskToEdit.objective || '',\n        taskDescription: taskToEdit.taskDescription || '',\n        deadline: taskToEdit.deadline || ''\n      });\n    }\n  }, [taskToEdit]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = () => {\n    onUpdateTask({\n      ...taskToEdit,\n      ...formData\n    });\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        bgcolor: 'white',\n        borderRadius: '16px',\n        boxShadow: 24,\n        p: 4,\n        width: '600px',\n        maxHeight: '90vh',\n        display: 'flex',\n        flexDirection: 'column',\n        outline: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          fontWeight: 'bold',\n          color: 'text.primary',\n          mb: 3\n        },\n        children: \"Edit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2.5,\n          overflowY: 'auto',\n          pr: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          label: \"Task Title\",\n          value: formData.title,\n          onChange: handleChange,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"objective\",\n          label: \"Objective\",\n          value: formData.objective,\n          onChange: handleChange,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"taskDescription\",\n          label: \"Task Description\",\n          value: formData.taskDescription,\n          onChange: handleChange,\n          variant: \"outlined\",\n          multiline: true,\n          rows: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"deadline\",\n          label: \"Deadline\",\n          value: formData.deadline,\n          onChange: handleChange,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          pt: 3,\n          mt: 'auto',\n          borderTop: '1px solid #e0e0e0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          sx: {\n            bgcolor: '#ff6f61',\n            '&:hover': {\n              bgcolor: '#e05252'\n            }\n          },\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(EditMyTaskModal, \"ot4kjEN7blBDZtnhG0P3h+LdKcs=\");\n_c = EditMyTaskModal;\nexport default EditMyTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditMyTaskModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Box","Typography","TextField","Button","jsxDEV","_jsxDEV","EditMyTaskModal","open","onClose","onUpdateTask","taskToEdit","_s","formData","setFormData","title","objective","taskDescription","deadline","handleChange","e","name","value","target","prev","handleSubmit","sx","display","alignItems","justifyContent","children","bgcolor","borderRadius","boxShadow","p","width","maxHeight","flexDirection","outline","variant","fontWeight","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","gap","overflowY","pr","label","onChange","multiline","rows","pt","mt","borderTop","onClick","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/EditMyTaskModal.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Box, Typography, TextField, Button } from '@mui/material';\n\n// This is a self-contained modal for editing \"My Tasks\"\nfunction EditMyTaskModal({ open, onClose, onUpdateTask, taskToEdit }) {\n  const [formData, setFormData] = useState({\n    title: '',\n    objective: '',\n    taskDescription: '',\n    deadline: ''\n  });\n\n  useEffect(() => {\n    if (taskToEdit) {\n      setFormData({\n        title: taskToEdit.title || '',\n        objective: taskToEdit.objective || '',\n        taskDescription: taskToEdit.taskDescription || '',\n        deadline: taskToEdit.deadline || ''\n      });\n    }\n  }, [taskToEdit]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = () => {\n    onUpdateTask({\n      ...taskToEdit,\n      ...formData\n    });\n    onClose();\n  };\n\n  return (\n    <Modal open={open} onClose={onClose} sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <Box sx={{\n        bgcolor: 'white', borderRadius: '16px', boxShadow: 24, p: 4, width: '600px',\n        maxHeight: '90vh', display: 'flex', flexDirection: 'column', outline: 'none'\n      }}>\n        <Typography variant=\"h5\" sx={{ fontWeight: 'bold', color: 'text.primary', mb: 3 }}>Edit Task</Typography>\n        \n        <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2.5, overflowY: 'auto', pr: 2 }}>\n          <TextField name=\"title\" label=\"Task Title\" value={formData.title} onChange={handleChange} variant=\"outlined\" />\n          <TextField name=\"objective\" label=\"Objective\" value={formData.objective} onChange={handleChange} variant=\"outlined\" />\n          <TextField name=\"taskDescription\" label=\"Task Description\" value={formData.taskDescription} onChange={handleChange} variant=\"outlined\" multiline rows={4} />\n          <TextField name=\"deadline\" label=\"Deadline\" value={formData.deadline} onChange={handleChange} variant=\"outlined\" />\n        </Box>\n\n        <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, pt: 3, mt: 'auto', borderTop: '1px solid #e0e0e0' }}>\n          <Button variant=\"text\" onClick={onClose}>Cancel</Button>\n          <Button variant=\"contained\" onClick={handleSubmit} sx={{ bgcolor: '#ff6f61', '&:hover': { bgcolor: '#e05252' } }}>Save Changes</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default EditMyTaskModal;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,GAAG,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;;AAEzE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,YAAY;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC;IACvCiB,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE,EAAE;IACnBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACd,IAAIY,UAAU,EAAE;MACdG,WAAW,CAAC;QACVC,KAAK,EAAEJ,UAAU,CAACI,KAAK,IAAI,EAAE;QAC7BC,SAAS,EAAEL,UAAU,CAACK,SAAS,IAAI,EAAE;QACrCC,eAAe,EAAEN,UAAU,CAACM,eAAe,IAAI,EAAE;QACjDC,QAAQ,EAAEP,UAAU,CAACO,QAAQ,IAAI;MACnC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,WAAW,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBf,YAAY,CAAC;MACX,GAAGC,UAAU;MACb,GAAGE;IACL,CAAC,CAAC;IACFJ,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEH,OAAA,CAACN,KAAK;IAACQ,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,OAAQ;IAACiB,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,eAC3GxB,OAAA,CAACL,GAAG;MAACyB,EAAE,EAAE;QACPK,OAAO,EAAE,OAAO;QAAEC,YAAY,EAAE,MAAM;QAAEC,SAAS,EAAE,EAAE;QAAEC,CAAC,EAAE,CAAC;QAAEC,KAAK,EAAE,OAAO;QAC3EC,SAAS,EAAE,MAAM;QAAET,OAAO,EAAE,MAAM;QAAEU,aAAa,EAAE,QAAQ;QAAEC,OAAO,EAAE;MACxE,CAAE;MAAAR,QAAA,gBACAxB,OAAA,CAACJ,UAAU;QAACqC,OAAO,EAAC,IAAI;QAACb,EAAE,EAAE;UAAEc,UAAU,EAAE,MAAM;UAAEC,KAAK,EAAE,cAAc;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAZ,QAAA,EAAC;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEzGxC,OAAA,CAACL,GAAG;QAACyB,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEU,aAAa,EAAE,QAAQ;UAAEU,GAAG,EAAE,GAAG;UAAEC,SAAS,EAAE,MAAM;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAnB,QAAA,gBACxFxB,OAAA,CAACH,SAAS;UAACkB,IAAI,EAAC,OAAO;UAAC6B,KAAK,EAAC,YAAY;UAAC5B,KAAK,EAAET,QAAQ,CAACE,KAAM;UAACoC,QAAQ,EAAEhC,YAAa;UAACoB,OAAO,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/GxC,OAAA,CAACH,SAAS;UAACkB,IAAI,EAAC,WAAW;UAAC6B,KAAK,EAAC,WAAW;UAAC5B,KAAK,EAAET,QAAQ,CAACG,SAAU;UAACmC,QAAQ,EAAEhC,YAAa;UAACoB,OAAO,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtHxC,OAAA,CAACH,SAAS;UAACkB,IAAI,EAAC,iBAAiB;UAAC6B,KAAK,EAAC,kBAAkB;UAAC5B,KAAK,EAAET,QAAQ,CAACI,eAAgB;UAACkC,QAAQ,EAAEhC,YAAa;UAACoB,OAAO,EAAC,UAAU;UAACa,SAAS;UAACC,IAAI,EAAE;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5JxC,OAAA,CAACH,SAAS;UAACkB,IAAI,EAAC,UAAU;UAAC6B,KAAK,EAAC,UAAU;UAAC5B,KAAK,EAAET,QAAQ,CAACK,QAAS;UAACiC,QAAQ,EAAEhC,YAAa;UAACoB,OAAO,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChH,CAAC,eAENxC,OAAA,CAACL,GAAG;QAACyB,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEE,cAAc,EAAE,UAAU;UAAEkB,GAAG,EAAE,CAAC;UAAEO,EAAE,EAAE,CAAC;UAAEC,EAAE,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAoB,CAAE;QAAA1B,QAAA,gBAClHxB,OAAA,CAACF,MAAM;UAACmC,OAAO,EAAC,MAAM;UAACkB,OAAO,EAAEhD,OAAQ;UAAAqB,QAAA,EAAC;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDxC,OAAA,CAACF,MAAM;UAACmC,OAAO,EAAC,WAAW;UAACkB,OAAO,EAAEhC,YAAa;UAACC,EAAE,EAAE;YAAEK,OAAO,EAAE,SAAS;YAAE,SAAS,EAAE;cAAEA,OAAO,EAAE;YAAU;UAAE,CAAE;UAAAD,QAAA,EAAC;QAAY;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ;AAAClC,EAAA,CAtDQL,eAAe;AAAAmD,EAAA,GAAfnD,eAAe;AAwDxB,eAAeA,eAAe;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}