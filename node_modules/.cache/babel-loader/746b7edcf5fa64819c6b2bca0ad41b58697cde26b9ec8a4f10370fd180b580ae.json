{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/LiveChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Box, Typography, TextField, IconButton, Avatar, Divider, Paper, CircularProgress } from '@mui/material';\nimport { Close as CloseIcon, Send as SendIcon, SupportAgent as SupportAgentIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  borderRadius: '16px',\n  boxShadow: 24,\n  display: 'flex',\n  flexDirection: 'column',\n  height: '70vh',\n  maxHeight: '550px'\n};\nconst initialMessage = {\n  id: 1,\n  sender: 'bot',\n  text: 'Welcome to Live Chat! How can I help you today? You can ask me about tasks, billing, your account, or anything else.'\n};\n\n// --- Advanced Conversational Bot Logic ---\nconst getBotResponse = (userMessage, currentConvState) => {\n  const msg = userMessage.toLowerCase();\n  let responseText = \"I'm sorry, I'm not sure how to help with that. I'm connecting you to a live agent who can better assist you.\";\n  let nextState = 'ESCALATING';\n  switch (currentConvState) {\n    case 'GREETING':\n    case 'AWAITING_ISSUE':\n      if (msg.includes('password') || msg.includes('reset')) {\n        responseText = \"I can definitely help with password issues. To confirm, are you looking to change your current password?\";\n        nextState = 'CONFIRM_PASSWORD_RESET';\n      } else if (msg.includes('task')) {\n        responseText = \"I can help with tasks. Are you trying to create a new task, or do you have a question about an existing one?\";\n        nextState = 'HANDLE_TASK_QUERY';\n      } else if (msg.includes('billing') || msg.includes('invoice')) {\n        responseText = \"For billing questions, you can view your subscription details and download invoices from the Settings page. Was this what you were looking for?\";\n        nextState = 'CONFIRM_RESOLUTION';\n      } else if (msg.includes('hello') || msg.includes('hi')) {\n        responseText = \"Hello! What can I assist you with today?\";\n        nextState = 'AWAITING_ISSUE';\n      }\n      break;\n    case 'CONFIRM_PASSWORD_RESET':\n      if (msg.includes('yes')) {\n        responseText = \"Great. You can change your password on the Settings page, under the 'Security' section. Did that resolve your issue?\";\n        nextState = 'CONFIRM_RESOLUTION';\n      } else {\n        responseText = \"My apologies. Could you please describe the password issue in more detail?\";\n        nextState = 'AWAITING_ISSUE';\n      }\n      break;\n    case 'HANDLE_TASK_QUERY':\n      if (msg.includes('create') || msg.includes('new')) {\n        responseText = \"To create a new task, simply go to the Dashboard and use the 'Add Task' button. Is there anything else I can help with?\";\n        nextState = 'CONFIRM_RESOLUTION';\n      } else {\n        responseText = \"You can edit or delete existing tasks using the three-dot menu next to each task on the Dashboard. Let me know if that helps!\";\n        nextState = 'CONFIRM_RESOLUTION';\n      }\n      break;\n    case 'CONFIRM_RESOLUTION':\n      if (msg.includes('yes') || msg.includes('thanks') || msg.includes('thank you')) {\n        responseText = \"You're welcome! Is there anything else I can assist you with today?\";\n        nextState = 'AWAITING_ISSUE';\n      } else {\n        responseText = \"I see. In that case, I am connecting you to a live support agent for further assistance.\";\n        nextState = 'ESCALATING';\n      }\n      break;\n    default:\n      // This state is for when the bot escalates and ends the conversation.\n      responseText = \"Please hold on, an agent will be with you shortly.\";\n      nextState = 'ESCALATING';\n  }\n  return {\n    responseText,\n    nextState\n  };\n};\nfunction LiveChatModal({\n  open,\n  onClose\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([initialMessage]);\n  const [conversationState, setConversationState] = useState('GREETING');\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n  useEffect(() => {\n    if (open) {\n      setMessages([initialMessage]);\n      setConversationState('GREETING');\n    }\n  }, [open]);\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: message\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const {\n      responseText,\n      nextState\n    } = getBotResponse(message, conversationState);\n    setMessage('');\n    setIsTyping(true);\n    setConversationState(nextState);\n    setTimeout(() => {\n      const botResponse = {\n        id: Date.now() + 1,\n        sender: 'bot',\n        text: responseText\n      };\n      setIsTyping(false);\n      setMessages(prev => [...prev, botResponse]);\n    }, 1500 + Math.random() * 500); // Simulate realistic typing delay\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          bgcolor: '#f5f5f5',\n          borderTopLeftRadius: '16px',\n          borderTopRightRadius: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Live Chat Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          p: 2,\n          overflowY: 'auto'\n        },\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n            mb: 2\n          },\n          children: [msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'primary.main',\n              mr: 1.5\n            },\n            children: /*#__PURE__*/_jsxDEV(SupportAgentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 1.5,\n              borderRadius: '12px',\n              bgcolor: msg.sender === 'user' ? 'primary.main' : '#f0f0f0',\n              color: msg.sender === 'user' ? 'white' : 'text.primary',\n              maxWidth: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)), isTyping && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'primary.main',\n              mr: 1.5\n            },\n            children: /*#__PURE__*/_jsxDEV(SupportAgentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 1.5,\n              bgcolor: '#f0f0f0',\n              borderRadius: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: '#f5f5f5',\n          borderBottomLeftRadius: '16px',\n          borderBottomRightRadius: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 3,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSendMessage,\n              disabled: !message.trim(),\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this),\n            sx: {\n              borderRadius: '12px',\n              bgcolor: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(LiveChatModal, \"KypDNdQQ/FQKtidOup4N7KfIarw=\");\n_c = LiveChatModal;\nexport default LiveChatModal;\nvar _c;\n$RefreshReg$(_c, \"LiveChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Box","Typography","TextField","IconButton","Avatar","Divider","Paper","CircularProgress","Close","CloseIcon","Send","SendIcon","SupportAgent","SupportAgentIcon","jsxDEV","_jsxDEV","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","display","flexDirection","height","maxHeight","initialMessage","id","sender","text","getBotResponse","userMessage","currentConvState","msg","toLowerCase","responseText","nextState","includes","LiveChatModal","open","onClose","_s","message","setMessage","messages","setMessages","conversationState","setConversationState","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","Date","now","prev","setTimeout","botResponse","Math","random","handleKeyPress","event","key","shiftKey","preventDefault","children","sx","p","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","variant","component","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexGrow","overflowY","map","mb","mr","elevation","color","maxWidth","size","ref","borderBottomLeftRadius","borderBottomRightRadius","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","InputProps","endAdornment","disabled","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/LiveChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n    Modal, Box, Typography, TextField, IconButton, Avatar, Divider, Paper, CircularProgress\n} from '@mui/material';\nimport { Close as CloseIcon, Send as SendIcon, SupportAgent as SupportAgentIcon } from '@mui/icons-material';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    borderRadius: '16px',\n    boxShadow: 24,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '70vh',\n    maxHeight: '550px'\n};\n\nconst initialMessage = {\n    id: 1,\n    sender: 'bot',\n    text: 'Welcome to Live Chat! How can I help you today? You can ask me about tasks, billing, your account, or anything else.'\n};\n\n// --- Advanced Conversational Bot Logic ---\nconst getBotResponse = (userMessage, currentConvState) => {\n    const msg = userMessage.toLowerCase();\n    let responseText = \"I'm sorry, I'm not sure how to help with that. I'm connecting you to a live agent who can better assist you.\";\n    let nextState = 'ESCALATING';\n\n    switch (currentConvState) {\n        case 'GREETING':\n        case 'AWAITING_ISSUE':\n            if (msg.includes('password') || msg.includes('reset')) {\n                responseText = \"I can definitely help with password issues. To confirm, are you looking to change your current password?\";\n                nextState = 'CONFIRM_PASSWORD_RESET';\n            } else if (msg.includes('task')) {\n                responseText = \"I can help with tasks. Are you trying to create a new task, or do you have a question about an existing one?\";\n                nextState = 'HANDLE_TASK_QUERY';\n            } else if (msg.includes('billing') || msg.includes('invoice')) {\n                responseText = \"For billing questions, you can view your subscription details and download invoices from the Settings page. Was this what you were looking for?\";\n                nextState = 'CONFIRM_RESOLUTION';\n            } else if (msg.includes('hello') || msg.includes('hi')) {\n                responseText = \"Hello! What can I assist you with today?\";\n                nextState = 'AWAITING_ISSUE';\n            }\n            break;\n\n        case 'CONFIRM_PASSWORD_RESET':\n            if (msg.includes('yes')) {\n                responseText = \"Great. You can change your password on the Settings page, under the 'Security' section. Did that resolve your issue?\";\n                nextState = 'CONFIRM_RESOLUTION';\n            } else {\n                responseText = \"My apologies. Could you please describe the password issue in more detail?\";\n                nextState = 'AWAITING_ISSUE';\n            }\n            break;\n\n        case 'HANDLE_TASK_QUERY':\n            if (msg.includes('create') || msg.includes('new')) {\n                responseText = \"To create a new task, simply go to the Dashboard and use the 'Add Task' button. Is there anything else I can help with?\";\n                nextState = 'CONFIRM_RESOLUTION';\n            } else {\n                responseText = \"You can edit or delete existing tasks using the three-dot menu next to each task on the Dashboard. Let me know if that helps!\";\n                nextState = 'CONFIRM_RESOLUTION';\n            }\n            break;\n\n        case 'CONFIRM_RESOLUTION':\n            if (msg.includes('yes') || msg.includes('thanks') || msg.includes('thank you')) {\n                responseText = \"You're welcome! Is there anything else I can assist you with today?\";\n                nextState = 'AWAITING_ISSUE';\n            } else {\n                responseText = \"I see. In that case, I am connecting you to a live support agent for further assistance.\";\n                nextState = 'ESCALATING';\n            }\n            break;\n            \n        default:\n            // This state is for when the bot escalates and ends the conversation.\n            responseText = \"Please hold on, an agent will be with you shortly.\";\n            nextState = 'ESCALATING';\n    }\n\n    return { responseText, nextState };\n};\n\n\nfunction LiveChatModal({ open, onClose }) {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([initialMessage]);\n    const [conversationState, setConversationState] = useState('GREETING');\n    const [isTyping, setIsTyping] = useState(false);\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages, isTyping]);\n\n    useEffect(() => {\n        if (open) {\n            setMessages([initialMessage]);\n            setConversationState('GREETING');\n        }\n    }, [open]);\n\n    const handleSendMessage = () => {\n        if (!message.trim()) return;\n\n        const userMessage = { id: Date.now(), sender: 'user', text: message };\n        setMessages(prev => [...prev, userMessage]);\n\n        const { responseText, nextState } = getBotResponse(message, conversationState);\n        setMessage('');\n        setIsTyping(true);\n        setConversationState(nextState);\n\n        setTimeout(() => {\n            const botResponse = { id: Date.now() + 1, sender: 'bot', text: responseText };\n            setIsTyping(false);\n            setMessages(prev => [...prev, botResponse]);\n        }, 1500 + Math.random() * 500); // Simulate realistic typing delay\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <Modal open={open} onClose={onClose}>\n            <Box sx={style}>\n                <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center', bgcolor: '#f5f5f5', borderTopLeftRadius: '16px', borderTopRightRadius: '16px' }}>\n                    <Typography variant=\"h6\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\n                        Live Chat Support\n                    </Typography>\n                    <IconButton onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </Box>\n                <Box sx={{ flexGrow: 1, p: 2, overflowY: 'auto' }}>\n                    {messages.map((msg) => (\n                        <Box\n                            key={msg.id}\n                            sx={{\n                                display: 'flex',\n                                justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n                                mb: 2,\n                            }}\n                        >\n                            {msg.sender === 'bot' && (\n                                <Avatar sx={{ bgcolor: 'primary.main', mr: 1.5 }}>\n                                    <SupportAgentIcon />\n                                </Avatar>\n                            )}\n                            <Paper\n                                elevation={0}\n                                sx={{\n                                    p: 1.5,\n                                    borderRadius: '12px',\n                                    bgcolor: msg.sender === 'user' ? 'primary.main' : '#f0f0f0',\n                                    color: msg.sender === 'user' ? 'white' : 'text.primary',\n                                    maxWidth: '80%',\n                                }}\n                            >\n                                <Typography variant=\"body2\">{msg.text}</Typography>\n                            </Paper>\n                        </Box>\n                    ))}\n                    {isTyping && (\n                        <Box sx={{ display: 'flex', justifyContent: 'flex-start', mb: 2 }}>\n                            <Avatar sx={{ bgcolor: 'primary.main', mr: 1.5 }}>\n                                <SupportAgentIcon />\n                            </Avatar>\n                            <Paper elevation={0} sx={{ p: 1.5, bgcolor: '#f0f0f0', borderRadius: '12px' }}>\n                                <CircularProgress size={20} />\n                            </Paper>\n                        </Box>\n                    )}\n                    <div ref={messagesEndRef} />\n                </Box>\n                <Divider />\n                <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderBottomLeftRadius: '16px', borderBottomRightRadius: '16px' }}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        maxRows={3}\n                        variant=\"outlined\"\n                        placeholder=\"Type your message...\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        InputProps={{\n                            endAdornment: (\n                                <IconButton color=\"primary\" onClick={handleSendMessage} disabled={!message.trim()}>\n                                    <SendIcon />\n                                </IconButton>\n                            ),\n                            sx: { borderRadius: '12px', bgcolor: 'white' }\n                        }}\n                    />\n                </Box>\n            </Box>\n        </Modal>\n    );\n}\n\nexport default LiveChatModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}