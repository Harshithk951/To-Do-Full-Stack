{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/DashboardLayout.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Outlet, useOutletContext } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport Sidebar from './Sidebar'; // Assuming you have a Sidebar component\nimport Header from './Header'; // Assuming you have a Header component\nimport ProfileModal from './ProfileModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardLayout() {\n  _s();\n  const [isProfileModalOpen, setProfileModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // 1. User state is now managed in the layout\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Harshith Kumar.M',\n    email: 'harshith.kumar@example.com',\n    role: 'Administrator',\n    phone: '+1 234 567 890',\n    location: 'San Francisco, CA',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=100&q=80'\n  });\n\n  // 2. Function to update user state, passed to the modal\n  const handleUpdateUser = updatedData => {\n    setCurrentUser(updatedData);\n    setProfileModalOpen(false); // Close modal on save\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: currentUser,\n      onProfileClick: () => setProfileModalOpen(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        bgcolor: '#f4f6f8'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        searchTerm: searchTerm,\n        onSearchChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {\n        context: {\n          searchTerm,\n          setSearchTerm\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProfileModal, {\n      open: isProfileModalOpen,\n      onClose: () => setProfileModalOpen(false),\n      user: currentUser,\n      onSave: handleUpdateUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n// Custom hook for child components to access context\n_s(DashboardLayout, \"CGE48cY4PCwMTq2YN0IC3sFmBTs=\");\n_c = DashboardLayout;\nexport function useDashboardContext() {\n  _s2();\n  return useOutletContext();\n}\n_s2(useDashboardContext, \"Rs4YI5kq4BSSMksQP+yCYpEjKVU=\", false, function () {\n  return [useOutletContext];\n});\nexport default DashboardLayout;\nvar _c;\n$RefreshReg$(_c, \"DashboardLayout\");","map":{"version":3,"names":["React","useState","Outlet","useOutletContext","Box","Sidebar","Header","ProfileModal","jsxDEV","_jsxDEV","DashboardLayout","_s","isProfileModalOpen","setProfileModalOpen","searchTerm","setSearchTerm","currentUser","setCurrentUser","name","email","role","phone","location","avatar","handleUpdateUser","updatedData","sx","display","children","user","onProfileClick","fileName","_jsxFileName","lineNumber","columnNumber","component","flexGrow","p","bgcolor","onSearchChange","e","target","value","context","open","onClose","onSave","_c","useDashboardContext","_s2","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/DashboardLayout.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Outlet, useOutletContext } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport Sidebar from './Sidebar'; // Assuming you have a Sidebar component\nimport Header from './Header'; // Assuming you have a Header component\nimport ProfileModal from './ProfileModal';\n\nfunction DashboardLayout() {\n  const [isProfileModalOpen, setProfileModalOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // 1. User state is now managed in the layout\n  const [currentUser, setCurrentUser] = useState({\n    name: 'Harshith Kumar.M',\n    email: 'harshith.kumar@example.com',\n    role: 'Administrator',\n    phone: '+1 234 567 890',\n    location: 'San Francisco, CA',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=100&q=80'\n  });\n\n  // 2. Function to update user state, passed to the modal\n  const handleUpdateUser = (updatedData) => {\n    setCurrentUser(updatedData);\n    setProfileModalOpen(false); // Close modal on save\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      {/* 3. Sidebar now receives user data and the function to open the modal */}\n      <Sidebar \n        user={currentUser} \n        onProfileClick={() => setProfileModalOpen(true)} \n      />\n      \n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, bgcolor: '#f4f6f8' }}>\n        <Header \n          searchTerm={searchTerm} \n          onSearchChange={(e) => setSearchTerm(e.target.value)} \n        />\n        {/* The child pages like Dashboard, MyTask etc. will render here */}\n        <Outlet context={{ searchTerm, setSearchTerm }} />\n      </Box>\n\n      {/* 4. ProfileModal receives user data and the save handler */}\n      <ProfileModal\n        open={isProfileModalOpen}\n        onClose={() => setProfileModalOpen(false)}\n        user={currentUser}\n        onSave={handleUpdateUser}\n      />\n    </Box>\n  );\n}\n\n// Custom hook for child components to access context\nexport function useDashboardContext() {\n  return useOutletContext();\n}\n\nexport default DashboardLayout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}