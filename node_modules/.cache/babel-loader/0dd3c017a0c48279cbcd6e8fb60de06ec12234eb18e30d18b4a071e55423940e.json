{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/LiveChatModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Box, Typography, TextField, IconButton, Avatar, Divider, Paper } from '@mui/material';\nimport { Close as CloseIcon, Send as SendIcon, SupportAgent as SupportAgentIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  borderRadius: '16px',\n  boxShadow: 24,\n  display: 'flex',\n  flexDirection: 'column',\n  height: '70vh',\n  maxHeight: '550px'\n};\nconst initialMessage = {\n  id: 1,\n  sender: 'bot',\n  text: 'Welcome to Live Chat! How can I help you today? Feel free to ask about tasks, billing, or your account.'\n};\n\n// --- New Bot Logic ---\nconst getBotResponse = userMessage => {\n  const lowerCaseMessage = userMessage.toLowerCase();\n  if (lowerCaseMessage.includes('password') || lowerCaseMessage.includes('reset')) {\n    return \"You can reset your password on the Settings page under the 'Security' section. Is there anything else you need?\";\n  }\n  if (lowerCaseMessage.includes('task') || lowerCaseMessage.includes('create')) {\n    return \"You can create, view, and manage your tasks from the Dashboard. The 'Add Task' button is located at the top of that page.\";\n  }\n  if (lowerCaseMessage.includes('billing') || lowerCaseMessage.includes('invoice') || lowerCaseMessage.includes('subscription')) {\n    return \"All billing and subscription information, including your invoices, can be found on the Settings page under 'Account & Billing'.\";\n  }\n  if (lowerCaseMessage.includes('profile') || lowerCaseMessage.includes('name')) {\n    return \"You can update your profile details, including your name and avatar, by clicking your profile picture in the sidebar.\";\n  }\n  return \"Thank you for your message. I am connecting you with a live agent who can better assist with your query.\";\n};\nfunction LiveChatModal({\n  open,\n  onClose\n}) {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([initialMessage]);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // This effect ensures the chat scrolls to the newest message\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // This effect ensures the chat is fresh every time the modal is opened\n  useEffect(() => {\n    if (open) {\n      setMessages([initialMessage]);\n    }\n  }, [open]);\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      text: message\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const responseText = getBotResponse(message);\n    setMessage('');\n    setTimeout(() => {\n      const botResponse = {\n        id: Date.now() + 1,\n        sender: 'bot',\n        text: responseText\n      };\n      setMessages(prev => [...prev, botResponse]);\n    }, 1200); // Delay for a more natural feel\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: style,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          bgcolor: '#f5f5f5',\n          borderTopLeftRadius: '16px',\n          borderTopRightRadius: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Live Chat Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          p: 2,\n          overflowY: 'auto'\n        },\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n            mb: 2\n          },\n          children: [msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'primary.main',\n              mr: 1.5\n            },\n            children: /*#__PURE__*/_jsxDEV(SupportAgentIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 1.5,\n              borderRadius: '12px',\n              bgcolor: msg.sender === 'user' ? 'primary.main' : '#f0f0f0',\n              color: msg.sender === 'user' ? 'white' : 'text.primary',\n              maxWidth: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: '#f5f5f5',\n          borderBottomLeftRadius: '16px',\n          borderBottomRightRadius: '16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          multiline: true,\n          maxRows: 3,\n          variant: \"outlined\",\n          placeholder: \"Type your message...\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSendMessage,\n              disabled: !message.trim(),\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this),\n            sx: {\n              borderRadius: '12px',\n              bgcolor: 'white'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(LiveChatModal, \"GUmdM/dDc7cnpZ1B21E/em5Blgg=\");\n_c = LiveChatModal;\nexport default LiveChatModal;\nvar _c;\n$RefreshReg$(_c, \"LiveChatModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Box","Typography","TextField","IconButton","Avatar","Divider","Paper","Close","CloseIcon","Send","SendIcon","SupportAgent","SupportAgentIcon","jsxDEV","_jsxDEV","style","position","top","left","transform","width","bgcolor","borderRadius","boxShadow","display","flexDirection","height","maxHeight","initialMessage","id","sender","text","getBotResponse","userMessage","lowerCaseMessage","toLowerCase","includes","LiveChatModal","open","onClose","_s","message","setMessage","messages","setMessages","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","Date","now","prev","responseText","setTimeout","botResponse","handleKeyPress","event","key","shiftKey","preventDefault","children","sx","p","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","variant","component","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flexGrow","overflowY","map","msg","mb","mr","elevation","color","maxWidth","ref","borderBottomLeftRadius","borderBottomRightRadius","fullWidth","multiline","maxRows","placeholder","value","onChange","e","target","onKeyPress","InputProps","endAdornment","disabled","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/LiveChatModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n    Modal, Box, Typography, TextField, IconButton, Avatar, Divider, Paper\n} from '@mui/material';\nimport { Close as CloseIcon, Send as SendIcon, SupportAgent as SupportAgentIcon } from '@mui/icons-material';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    borderRadius: '16px',\n    boxShadow: 24,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '70vh',\n    maxHeight: '550px'\n};\n\nconst initialMessage = {\n    id: 1,\n    sender: 'bot',\n    text: 'Welcome to Live Chat! How can I help you today? Feel free to ask about tasks, billing, or your account.'\n};\n\n// --- New Bot Logic ---\nconst getBotResponse = (userMessage) => {\n    const lowerCaseMessage = userMessage.toLowerCase();\n\n    if (lowerCaseMessage.includes('password') || lowerCaseMessage.includes('reset')) {\n        return \"You can reset your password on the Settings page under the 'Security' section. Is there anything else you need?\";\n    }\n    if (lowerCaseMessage.includes('task') || lowerCaseMessage.includes('create')) {\n        return \"You can create, view, and manage your tasks from the Dashboard. The 'Add Task' button is located at the top of that page.\";\n    }\n    if (lowerCaseMessage.includes('billing') || lowerCaseMessage.includes('invoice') || lowerCaseMessage.includes('subscription')) {\n        return \"All billing and subscription information, including your invoices, can be found on the Settings page under 'Account & Billing'.\";\n    }\n    if (lowerCaseMessage.includes('profile') || lowerCaseMessage.includes('name')) {\n        return \"You can update your profile details, including your name and avatar, by clicking your profile picture in the sidebar.\";\n    }\n    \n    return \"Thank you for your message. I am connecting you with a live agent who can better assist with your query.\";\n};\n\nfunction LiveChatModal({ open, onClose }) {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([initialMessage]);\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    // This effect ensures the chat scrolls to the newest message\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n    \n    // This effect ensures the chat is fresh every time the modal is opened\n    useEffect(() => {\n        if (open) {\n            setMessages([initialMessage]);\n        }\n    }, [open]);\n\n    const handleSendMessage = () => {\n        if (!message.trim()) return;\n\n        const userMessage = { id: Date.now(), sender: 'user', text: message };\n        setMessages(prev => [...prev, userMessage]);\n        \n        const responseText = getBotResponse(message);\n        setMessage('');\n\n        setTimeout(() => {\n            const botResponse = { id: Date.now() + 1, sender: 'bot', text: responseText };\n            setMessages(prev => [...prev, botResponse]);\n        }, 1200); // Delay for a more natural feel\n    };\n\n    const handleKeyPress = (event) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            handleSendMessage();\n        }\n    };\n\n    return (\n        <Modal open={open} onClose={onClose}>\n            <Box sx={style}>\n                <Box sx={{ p: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center', bgcolor: '#f5f5f5', borderTopLeftRadius: '16px', borderTopRightRadius: '16px' }}>\n                    <Typography variant=\"h6\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\n                        Live Chat Support\n                    </Typography>\n                    <IconButton onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </Box>\n                <Box sx={{ flexGrow: 1, p: 2, overflowY: 'auto' }}>\n                    {messages.map((msg) => (\n                        <Box\n                            key={msg.id}\n                            sx={{\n                                display: 'flex',\n                                justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n                                mb: 2,\n                            }}\n                        >\n                            {msg.sender === 'bot' && (\n                                <Avatar sx={{ bgcolor: 'primary.main', mr: 1.5 }}>\n                                    <SupportAgentIcon />\n                                </Avatar>\n                            )}\n                            <Paper\n                                elevation={0}\n                                sx={{\n                                    p: 1.5,\n                                    borderRadius: '12px',\n                                    bgcolor: msg.sender === 'user' ? 'primary.main' : '#f0f0f0',\n                                    color: msg.sender === 'user' ? 'white' : 'text.primary',\n                                    maxWidth: '80%',\n                                }}\n                            >\n                                <Typography variant=\"body2\">{msg.text}</Typography>\n                            </Paper>\n                        </Box>\n                    ))}\n                    <div ref={messagesEndRef} />\n                </Box>\n                <Divider />\n                <Box sx={{ p: 2, bgcolor: '#f5f5f5', borderBottomLeftRadius: '16px', borderBottomRightRadius: '16px' }}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        maxRows={3}\n                        variant=\"outlined\"\n                        placeholder=\"Type your message...\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        onKeyPress={handleKeyPress}\n                        InputProps={{\n                            endAdornment: (\n                                <IconButton color=\"primary\" onClick={handleSendMessage} disabled={!message.trim()}>\n                                    <SendIcon />\n                                </IconButton>\n                            ),\n                            sx: { borderRadius: '12px', bgcolor: 'white' }\n                        }}\n                    />\n                </Box>\n            </Box>\n        </Modal>\n    );\n}\n\nexport default LiveChatModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}