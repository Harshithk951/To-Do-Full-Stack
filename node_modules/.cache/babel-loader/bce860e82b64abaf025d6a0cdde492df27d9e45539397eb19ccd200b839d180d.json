{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Typography, Paper, CircularProgress } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to reset password');\n      }\n      toast.success(data.message + \" Redirecting to login...\");\n      setTimeout(() => navigate('/login'), 2500);\n    } catch (err) {\n      toast.error(err.message);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#f9fafb'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      component: \"div\",\n      elevation: 3,\n      sx: {\n        p: 4,\n        borderRadius: 3,\n        maxWidth: '400px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 'bold'\n          },\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'text.secondary',\n            mt: 1\n          },\n          children: \"Please enter a new strong password.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            fontWeight: 600,\n            mb: 1\n          },\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          variant: \"outlined\",\n          value: password,\n          onChange: e => setPassword(e.gantt.value),\n          required: true,\n          fullWidth: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          sx: {\n            fontWeight: 600,\n            mb: 1\n          },\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          type: \"password\",\n          variant: \"outlined\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          fullWidth: true,\n          sx: {\n            mb: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          fullWidth: true,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, this) : 'Update Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"ctMXiISe+qNk33m/oQuDZll8Cuc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Box","TextField","Button","Typography","Paper","CircularProgress","toast","jsxDEV","_jsxDEV","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","token","navigate","handleSubmit","e","preventDefault","error","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","success","setTimeout","err","sx","minHeight","display","justifyContent","alignItems","backgroundColor","children","component","elevation","p","borderRadius","maxWidth","width","textAlign","mb","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","mt","onSubmit","type","value","onChange","gantt","required","fullWidth","target","size","disabled","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Box, TextField, Button, Typography, Paper, CircularProgress } from '@mui/material';\nimport { toast } from 'react-toastify';\n\nfunction ResetPassword() {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { token } = useParams();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3001/reset-password/${token}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ password }),\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Failed to reset password');\n      }\n      toast.success(data.message + \" Redirecting to login...\");\n      setTimeout(() => navigate('/login'), 2500);\n    } catch (err) {\n      toast.error(err.message);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#f9fafb',\n      }}\n    >\n      <Paper component=\"div\" elevation={3} sx={{ p: 4, borderRadius: 3, maxWidth: '400px', width: '100%' }}>\n        <Box sx={{ textAlign: 'center', mb: 3 }}>\n          <Typography variant=\"h4\" component=\"h1\" sx={{ fontWeight: 'bold' }}>Reset Your Password</Typography>\n          <Typography sx={{ color: 'text.secondary', mt: 1 }}>Please enter a new strong password.</Typography>\n        </Box>\n        <Box component=\"form\" onSubmit={handleSubmit}>\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 600, mb: 1 }}>New Password</Typography>\n          <TextField\n            type=\"password\"\n            variant=\"outlined\"\n            value={password}\n            onChange={(e) => setPassword(e.gantt.value)}\n            required\n            fullWidth\n            sx={{ mb: 2 }}\n          />\n          <Typography variant=\"subtitle2\" sx={{ fontWeight: 600, mb: 1 }}>Confirm New Password</Typography>\n          <TextField\n            type=\"password\"\n            variant=\"outlined\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            fullWidth\n            sx={{ mb: 3 }}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            fullWidth\n            disabled={loading}\n          >\n            {loading ? <CircularProgress size={24} color=\"inherit\" /> : 'Update Password'}\n          </Button>\n        </Box>\n      </Paper>\n    </Box>\n  );\n}\n\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}