{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Desktop/todo-app/src/components/MyTask.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Card, CardContent } from '@mui/material';\nimport { useDashboardContext } from './DashboardLayout'; // Import the context hook\n\n// Sample data for this page to demonstrate searching\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mySampleTasks = [{\n  id: 101,\n  title: \"Review Q3 financial report\",\n  category: \"Finance\"\n}, {\n  id: 102,\n  title: \"Draft marketing email for new campaign\",\n  category: \"Marketing\"\n}, {\n  id: 103,\n  title: \"Update the user authentication flow\",\n  category: \"Development\"\n}, {\n  id: 104,\n  title: \"Schedule team performance reviews\",\n  category: \"HR\"\n}, {\n  id: 105,\n  title: \"Test new API endpoints for the mobile app\",\n  category: \"Development\"\n}, {\n  id: 106,\n  title: \"Pay monthly office rent\",\n  category: \"Finance\"\n}];\nfunction MyTask() {\n  _s();\n  const {\n    searchTerm\n  } = useDashboardContext(); // Get the global search term\n\n  // Filter the tasks for this page based on the search term\n  const filteredTasks = mySampleTasks.filter(task => task.title.toLowerCase().includes(searchTerm.toLowerCase()) || task.category.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 3,\n        fontWeight: 'bold'\n      },\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2\n      },\n      children: filteredTasks.length > 0 ? filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 2,\n        sx: {\n          borderRadius: '12px'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontSize: '1rem',\n              fontWeight: 600\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"Category: \", task.category]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Card, {\n        elevation: 2,\n        sx: {\n          borderRadius: '12px',\n          p: 3,\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'text.secondary'\n          },\n          children: [\"No tasks found for \\\"\", searchTerm, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(MyTask, \"3zG37inzkEFbnAXUPaAJY4kNMvA=\", false, function () {\n  return [useDashboardContext];\n});\n_c = MyTask;\nexport default MyTask;\nvar _c;\n$RefreshReg$(_c, \"MyTask\");","map":{"version":3,"names":["React","Box","Typography","Card","CardContent","useDashboardContext","jsxDEV","_jsxDEV","mySampleTasks","id","title","category","MyTask","_s","searchTerm","filteredTasks","filter","task","toLowerCase","includes","children","variant","sx","mb","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","length","map","elevation","borderRadius","fontSize","color","p","textAlign","_c","$RefreshReg$"],"sources":["/Users/pro/Desktop/todo-app/src/components/MyTask.js"],"sourcesContent":["import React from 'react';\nimport { Box, Typography, Card, CardContent } from '@mui/material';\nimport { useDashboardContext } from './DashboardLayout'; // Import the context hook\n\n// Sample data for this page to demonstrate searching\nconst mySampleTasks = [\n  { id: 101, title: \"Review Q3 financial report\", category: \"Finance\" },\n  { id: 102, title: \"Draft marketing email for new campaign\", category: \"Marketing\" },\n  { id: 103, title: \"Update the user authentication flow\", category: \"Development\" },\n  { id: 104, title: \"Schedule team performance reviews\", category: \"HR\" },\n  { id: 105, title: \"Test new API endpoints for the mobile app\", category: \"Development\" },\n  { id: 106, title: \"Pay monthly office rent\", category: \"Finance\" },\n];\n\nfunction MyTask() {\n  const { searchTerm } = useDashboardContext(); // Get the global search term\n\n  // Filter the tasks for this page based on the search term\n  const filteredTasks = mySampleTasks.filter(task =>\n    task.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    task.category.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" sx={{ mb: 3, fontWeight: 'bold' }}>My Tasks</Typography>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n        {filteredTasks.length > 0 ? (\n          filteredTasks.map(task => (\n            <Card key={task.id} elevation={2} sx={{ borderRadius: '12px' }}>\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ fontSize: '1rem', fontWeight: 600 }}>{task.title}</Typography>\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>Category: {task.category}</Typography>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Card elevation={2} sx={{ borderRadius: '12px', p: 3, textAlign: 'center' }}>\n            <Typography sx={{ color: 'text.secondary' }}>\n              No tasks found for \"{searchTerm}\"\n            </Typography>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default MyTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}